import { useRouter } from "next/router";
import Link from "next/link";
import Head from "next/head";
import { db, onSnapshot, query } from "@/plugin/firebase";
import React, { FormEvent, useEffect, useState } from "react";
import { useAuth } from "@/context/AuthContext";
import {
  addDoc,
  collection,
  limit,
  orderBy,
  Timestamp,
} from "firebase/firestore";
import { NextPage } from "next";

import { IMessage } from "@types";

const Room: NextPage = () => {
  const { currentUser } = useAuth();
  const [text, setText] = useState<string>();

  const post = async (event: FormEvent) => {
    event.preventDefault();
    // textが空白ないし、空文字、null、未定義である場合の処理をここに書く
    if (!text || !currentUser || !currentUser.uid) return;
    const data: IMessage = {
      value: text,
      postedAt: Timestamp.now(),
      postedUid: currentUser.uid,
    };
    const messagesRef = await collection(
      db,
      "chats",
      `${router.query.id}`,
      "messages"
    );
    await addDoc(messagesRef, {
      ...data,
    });
  };

  const [messages, setMessages] = useState<Array<IMessage>>([]);

  const router = useRouter();
  useEffect(() => {
    let tempMessages: Array<IMessage> = [];
    const q = query(
      collection(db, "chats", `${router.query.id}`, "messages"),
      orderBy("postedAt", "desc"),
      limit(10)
    );
    onSnapshot(q, (snapshot) => {
      snapshot
        .docChanges()
        .reverse()
        .forEach((change) => {
          if (change.type === "added")
            tempMessages.push(change.doc.data() as IMessage);
        });
      setMessages([...tempMessages]);
    });
  }, [router.query.id]);

  useEffect(() => {
    console.log("useEffect");
    console.log(messages);
  }, [messages]);

  return (
    <div>
      <Head>
        <title>m6s2o6brCyEsXBRxhS3M</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h1>m6s2o6brCyEsXBRxhS3M</h1>
      {/* <button onClick={clickButton}>Firestore追加</button> */}
      <Link href="/">
        <a>home</a>
      </Link>
      <br />
      <Link href="/top">
        <a>top</a>
      </Link>
      {messages.map((message: IMessage, i: number) => (
        <p key={i}>
          {message.value}
          {/* {alert(message.content)} */}
        </p>
      ))}
      <form onSubmit={post}>
        <textarea value={text} onChange={(e) => setText(e.target.value)} />
        <input type="submit" />
      </form>
    </div>
  );
};

export default Room;
