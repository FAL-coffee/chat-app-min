// import { useAuth } from "@/AuthContext";
import { useRouter } from "next/router";
import Link from "next/link";
import Head from "next/head";

import { db, onSnapshot, doc } from "@/firebase";
// import Image from "next/image";
import React, { useEffect, useState } from "react";
// import { addDoc, Timestamp } from "firebase/firestore";
import { Timestamp } from "firebase/firestore";
import { NextPage } from "next";
interface message {
  content: string;
  createdAt: Timestamp;
  uid: string;
}
interface chat {
  createdAt: Timestamp;
  description: string;
  messages: message[];
  name: string;
  owner: string;
}
const Room: NextPage = () => {
  //   const { currentUser } = useAuth();

  //   console.log(router.query.id);
  // データ追加
  //   const clickButton = () => {
  //     const docRef = addDoc(collection(db, "users"), {
  //       uid: "",
  //       displayName: "",
  //       email: "",
  //       photoURL:
  //         "",
  //     });
  //     console.log("Document", docRef);
  //   };

  const [chats, setChats] = useState<Array<chat>>([]);

  const router = useRouter();
  useEffect(() => {
    let tempchats: Array<chat> = [];
    // const q = query(collection(db, 'chats'), where('uid', '==', `${router.query.id}`))
    // const q = query(collection(db, "chats"));
    // dbに対する変更の全てを監視
    // onSnapshot(q, (snapshot) => {
    //   snapshot.docChanges().forEach((change) => {
    //     if (change.type === "added") {
    //       console.log("added");
    //       console.log(change.doc.data());
    //       console.log(change.doc);
    //       tempchats.push({
    //         ...(change.doc.data() as chat),
    //       });
    //     }
    //     if (change.type === "modified") {
    //       console.log("modified");
    //       console.log(change.doc.data());
    //       //   tempchats = [{ ...(change.doc.data() as chat) }];
    //       tempchats.push({
    //         ...(change.doc.data() as chat),
    //       });
    //     }
    //   });
    // });

    // 特定のdocに対する変更の監視
    onSnapshot(doc(db, "chats", `${router.query.id}`), (doc) => {
      //   console.log(doc.data());
      //   tempchats.push({
      //     ...(doc.data() as chat),
      //   });
      tempchats = [{ ...(doc.data() as chat) }];
      setChats(tempchats);
    });
  }, [router.query.id]);

  useEffect(() => {
    console.log("useEffect");
    console.log(chats);
  }, [chats]);

  return (
    <div>
      <Head>
        <title>m6s2o6brCyEsXBRxhS3M</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h1>m6s2o6brCyEsXBRxhS3M</h1>
      {/* <button onClick={clickButton}>Firestore追加</button> */}
      <Link href="/">
        <a>home</a>
      </Link>
      <br />
      <Link href="/top">
        <a>top</a>
      </Link>
      {chats.map((chat: chat, i: number) => (
        <div key={i}>
          {chat.messages.map((message: message, j: number) => (
            <p key={j}>
              {message.content}
              {/* {alert(message.content)} */}
            </p>
          ))}
        </div>
      ))}
    </div>
  );
};

export default Room;
